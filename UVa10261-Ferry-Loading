#include <bits/stdc++.h> 
	using namespace std;
	bool debug = false;
	int test, len, temp, n = 0;
	int cars[201], dp[10005][10005]; // remaining space on port and starboard
	int trace[101];

	int main() {
	    ifstream cin("ferry-loading.inp");
	    ios_base::sync_with_stdio(false);
	    cin.tie(NULL);
	    cin >> test;
	    while (test--) {
	    	n = 0; cars[n] = 0;
	    	cin >> len; 
	    	for (int i = 0; i <= len; i++) fill(dp[i], dp[i]+len, 0);
		    while (cin >> temp && temp != 0) {
				cars[++n] = temp / 100;
		    }
		    for (int car = 1; car <= n; car++) {
		    	for (int i = 0; i <= len; i++) {
		    		for (int j = 0; j <= len; j++) {
		    			if (i >= cars[car] && dp[i-cars[car]][j] == car-1) dp[i][j] = car;
		    			if (j >= cars[car] && dp[i][j-cars[car]] == car-1) dp[i][j] = car;
		    		}
		    	}
		    }
		    if (debug) {
		    	for (int i = 0; i <= len; i++) {
		    			for (int j = 0; j <= len; j++) {
		    				cout << dp[i][j] << " ";
		    			}
		    		cout << "\n";
		    	}
		    }
		    cout << dp[len][len] << "\n";
		}
		    // cout << ans << "\n";
		    // for (int i = 1; i <= ans; i++) {
		    // 	if (trace[i] == 0) cout << "port" << "\n";
		    // 	else cout << "starboard" << "\n";
		    // }
	    return 0;
	}	


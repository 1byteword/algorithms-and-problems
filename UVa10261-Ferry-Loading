#include <bits/stdc++.h> 
using namespace std;
bool debug = true;
int test, len, temp, carInd = 1;
int cars[201], rmPort, rmStar; // remaining space on port and starboard
int trace[101];

int loadFerries(int car, int rmPort, int rmStarBoard) {
	if (debug) cout << car << " " << rmPort << " " << rmStarBoard << "\n";
	if (car == carInd || rmPort < cars[car] && rmStarBoard < cars[car]) {
		return 0;
	} else {
		int res = 0;
		if (rmStarBoard < cars[car]) {
			res = loadFerries(car + 1, rmPort - cars[car], rmStarBoard);
			if (res > 0) {
				trace[car] = 0;
				return res+1;
			} else return 1;
		} else if (rmPort < cars[car]) {
			res = loadFerries(car + 1, rmPort, rmStarBoard - cars[car]) ;
			if (res > 0) {
				trace[car] = 1;
				return res+1;
			} else return 1;
		} else {
			int port = loadFerries(car + 1, rmPort - cars[car], rmStarBoard);
			int starboard = loadFerries(car + 1, rmPort, rmStarBoard - cars[car]);
			if (port > starboard) {
				trace[car] = 0;
				return port + 1;
			} else {
				trace[car] = 1;
				return starboard + 1;
			}
		}
		
	}
	
}
int main() {
    ifstream cin("ferry-loading.inp");
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cin >> test >> len;
    while (true) {
    	cin >> temp;
    	if (temp > 0) {
    		cars[carInd] = temp / 100;
    		carInd++;
    	}
    	else break;
    }
    int ans = loadFerries(1, len, len);
    cout << ans << "\n";
    for (int i = 1; i <= ans; i++) {
    	if (trace[i] == 0) cout << "port" << "\n";
    	else cout << "starboard" << "\n";
    }
    return 0;
	}

